package Windows;

import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.event.AncestorEvent;
import javax.swing.event.AncestorListener;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;

import DataBase.Conection;
import Products.Product;
import Sells.Cart;

public class Principal extends javax.swing.JFrame implements ActionListener, AncestorListener {

    private Cart cart = new Cart();
    private Product productSelected; 
    private Conection conect;
    private Operation oper;
    private DefaultTableModel modelProd;
    private DefaultTableModel modelCart;
    private DefaultTableModel modelSales;
    protected int colSelected = -1;
    protected String nameColumn = null;


    /**
     * Creates new form Principal
     * @throws Exception
     */

    public Principal() throws Exception {
        initComponents();
        super.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @throws Exception
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() throws Exception {

        jPanel1 = new javax.swing.JPanel();
        jPanelData = new javax.swing.JPanel();
        txtid = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtExpiration = new javax.swing.JTextField();
        txtStock = new javax.swing.JTextField();
        txtDiscount = new javax.swing.JTextField();
        lblid = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        lblStock = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblExpiration = new javax.swing.JLabel();
        lblDiscount = new javax.swing.JLabel();
        jPanelActions = new javax.swing.JPanel();
        btnDataAdd = new javax.swing.JButton();
        btnDataDelete = new javax.swing.JButton();
        btnDataModify = new javax.swing.JButton();
        btnDataIncome = new javax.swing.JButton();
        btnDataExpired = new javax.swing.JButton();
        btnDataReset = new javax.swing.JButton();
        jPanelSearch = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnOnlyStock = new javax.swing.JButton();
        btnOrderbySells = new javax.swing.JButton();
        btnOnlyExpired = new javax.swing.JButton();
        jPanelCar = new javax.swing.JPanel();
        spinnerCar = new javax.swing.JSpinner();
        btnCarAdd = new javax.swing.JButton();
        btnCarRemove = new javax.swing.JButton();
        btnCarConfirm = new javax.swing.JButton();
        btnCarClear = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        txtCarTotal = new javax.swing.JTextField();
        jPanelProductsTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProducts = new javax.swing.JTable();
        jPanelSalesTable = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableSales = new javax.swing.JTable();
        jPanelCarTable = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCar = new javax.swing.JTable();
        custom = new CustomerWindow();
        conect = new Conection();
        oper = new Operation();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanelData.setBackground(new java.awt.Color(102, 102, 102));
        jPanelData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanelData.setForeground(new java.awt.Color(255, 255, 255));

        txtid.setEditable(false);

        lblid.setForeground(new java.awt.Color(255, 255, 255));
        lblid.setText("ID");

        lblDescription.setForeground(new java.awt.Color(255, 255, 255));
        lblDescription.setText("Description");

        lblStock.setForeground(new java.awt.Color(255, 255, 255));
        lblStock.setText("Stock");

        lblPrice.setForeground(new java.awt.Color(255, 255, 255));
        lblPrice.setText("Price");

        lblExpiration.setForeground(new java.awt.Color(255, 255, 255));
        lblExpiration.setText("Expiration");

        lblDiscount.setForeground(new java.awt.Color(255, 255, 255));
        lblDiscount.setText("Discount");

        javax.swing.GroupLayout jPanelDataLayout = new javax.swing.GroupLayout(jPanelData);
        jPanelData.setLayout(jPanelDataLayout);
        jPanelDataLayout.setHorizontalGroup(
            jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDataLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblStock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblExpiration, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDescription, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtid)
                    .addComponent(txtDescription)
                    .addComponent(txtPrice)
                    .addComponent(txtExpiration)
                    .addComponent(txtStock)
                    .addComponent(txtDiscount, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelDataLayout.setVerticalGroup(
            jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDataLayout.createSequentialGroup()
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescription))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtExpiration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblExpiration))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiscount))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelActions.setBackground(new java.awt.Color(102, 102, 102));
        jPanelActions.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Actions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanelActions.setForeground(new java.awt.Color(255, 255, 255));

        btnDataAdd.setText("Add");
        btnDataAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnDataAddActionPerformed(evt);
                    oper.cleanTable(modelProd);
                    oper.setTable(jTableProducts, modelProd, "products");
                } catch (Exception e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        btnDataDelete.setText("Delete");
        btnDataDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnDataDeleteActionPerformed(evt);
                    oper.cleanTable(modelProd);
                    oper.setTable(jTableProducts, modelProd, "products");
                } catch (Exception e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        btnDataModify.setText("Modify");
        btnDataModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataModifyActionPerformed(evt);
            }
        });

        btnDataIncome.setText("Income");
        btnDataIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnDataIncomeActionPerformed(evt);
                } catch (NumberFormatException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                } catch (SQLException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        btnDataExpired.setText("Expired");
        btnDataExpired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataExpiredActionPerformed(evt);
            }
        });

        btnDataReset.setText("Reset");
        btnDataReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnDataResetActionPerformed(evt);
                } catch (Exception e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout jPanelActionsLayout = new javax.swing.GroupLayout(jPanelActions);
        jPanelActions.setLayout(jPanelActionsLayout);
        jPanelActionsLayout.setHorizontalGroup(
            jPanelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelActionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDataReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelActionsLayout.createSequentialGroup()
                        .addComponent(btnDataIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDataExpired, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelActionsLayout.createSequentialGroup()
                        .addComponent(btnDataAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDataModify, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDataDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelActionsLayout.setVerticalGroup(
            jPanelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelActionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDataAdd)
                    .addComponent(btnDataModify)
                    .addComponent(btnDataDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDataIncome)
                    .addComponent(btnDataExpired))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDataReset)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSearch.setBackground(new java.awt.Color(102, 102, 102));
        jPanelSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanelSearch.setForeground(new java.awt.Color(255, 255, 255));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnOnlyStock.setText("Only Stock");
        btnOnlyStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOnlyStockActionPerformed(evt);
            }
        });

        btnOrderbySells.setText("Order by sells");
        btnOrderbySells.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderbySellsActionPerformed(evt);
            }
        });

        btnOnlyExpired.setText("Only Expired");
        btnOnlyExpired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOnlyExpiredActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchLayout = new javax.swing.GroupLayout(jPanelSearch);
        jPanelSearch.setLayout(jPanelSearchLayout);
        jPanelSearchLayout.setHorizontalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearch)
                    .addGroup(jPanelSearchLayout.createSequentialGroup()
                        .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnOrderbySells, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnOnlyStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOnlyExpired, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelSearchLayout.setVerticalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch)
                    .addComponent(btnOnlyStock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOrderbySells)
                    .addComponent(btnOnlyExpired))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelCar.setBackground(new java.awt.Color(102, 102, 102));
        jPanelCar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Car Actions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanelCar.setForeground(new java.awt.Color(255, 255, 255));

        btnCarAdd.setText("Add");
        btnCarAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarAddActionPerformed(evt);
            }
        });

        btnCarRemove.setText("Remove");
        btnCarRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarRemoveActionPerformed(evt);
            }
        });

        btnCarConfirm.setText("Confirm");
        btnCarConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarConfirmActionPerformed(evt);
            }
        });

        btnCarClear.setText("Clear out");
        btnCarClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarClearActionPerformed(evt);
            }
        });

        lblTotal.setForeground(new java.awt.Color(255, 255, 255));
        lblTotal.setText("Total");

        txtCarTotal.setEditable(false);

        javax.swing.GroupLayout jPanelCarLayout = new javax.swing.GroupLayout(jPanelCar);
        jPanelCar.setLayout(jPanelCarLayout);
        jPanelCarLayout.setHorizontalGroup(
            jPanelCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelCarLayout.createSequentialGroup()
                        .addComponent(btnCarConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(jPanelCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCarClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCarLayout.createSequentialGroup()
                                .addComponent(lblTotal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCarTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelCarLayout.createSequentialGroup()
                        .addComponent(spinnerCar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnCarAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCarRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelCarLayout.setVerticalGroup(
            jPanelCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerCar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCarAdd)
                    .addComponent(btnCarRemove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCarConfirm)
                    .addComponent(btnCarClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(txtCarTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelProductsTable.setBackground(new java.awt.Color(102, 102, 102));
        jPanelProductsTable.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Products", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanelProductsTable.setForeground(new java.awt.Color(255, 255, 255));

        jTableProducts.setBackground(new java.awt.Color(102, 102, 102));
        jTableProducts.setForeground(new java.awt.Color(255, 255, 255)); 

        jTableProducts.addMouseListener(new MouseListener() {
			@Override
			public void mouseClicked(MouseEvent e) {
				int row = jTableProducts.getSelectedRow();
				if(row >= 0)
				{
					txtid.setText(jTableProducts.getValueAt(row, 0).toString());
					txtDescription.setText(jTableProducts.getValueAt(row, 1).toString());
					txtPrice.setText(jTableProducts.getValueAt(row, 2).toString());
					txtExpiration.setText(jTableProducts.getValueAt(row, 3).toString());
					txtStock.setText(jTableProducts.getValueAt(row, 4).toString());
                    txtDiscount.setText(jTableProducts.getValueAt(row, 5).toString());
                     
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }

            @Override
            public void mouseExited(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }
		});

        jTableCar.addMouseListener(new MouseListener() {
			@Override
			public void mouseClicked(MouseEvent e) {
				int row = jTableCar.getSelectedRow();
				if(row >= 0)
				{
					cart.setIdDelete(Integer.parseInt(jTableCar.getValueAt(row, 0).toString()));
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }

            @Override
            public void mouseExited(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }
		});

        modelProd = new DefaultTableModel();
        modelProd.addColumn("ID");
        modelProd.addColumn("Description");
        modelProd.addColumn("Price");
        modelProd.addColumn("Expire");
        modelProd.addColumn("Stock");
        modelProd.addColumn("Discount");
        modelProd.addColumn("Sales");

        jTableProducts.setModel(modelProd);

        modelCart = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Description", "Price", "Expire", "Amount", "Discount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

        jTableCar.setModel(modelCart);

        modelSales = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ID customer","Customer name", "Phone number", "Final price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

        jTableSales.setModel(modelSales);

        jTableProducts.getTableHeader().addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                colSelected = jTableProducts.columnAtPoint(e.getPoint());
                nameColumn = jTableProducts.getColumnName(colSelected);
                oper.orderBy(nameColumn, modelProd, "ASC");
            }

            @Override
            public void mousePressed(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }

            @Override
            public void mouseExited(MouseEvent e) {
                // TODO Auto-generated method stub
                
            }
        });

        jScrollPane1.setViewportView(jTableProducts);
        if (jTableProducts.getColumnModel().getColumnCount() > 0) {
            jTableProducts.getColumnModel().getColumn(0).setMaxWidth(60);
            jTableProducts.getColumnModel().getColumn(2).setMaxWidth(100);
            jTableProducts.getColumnModel().getColumn(4).setMaxWidth(120);
            jTableProducts.getColumnModel().getColumn(5).setMaxWidth(60);
            jTableProducts.getColumnModel().getColumn(6).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanelProductsTableLayout = new javax.swing.GroupLayout(jPanelProductsTable);
        jPanelProductsTable.setLayout(jPanelProductsTableLayout);
        jPanelProductsTableLayout.setHorizontalGroup(
            jPanelProductsTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProductsTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1042, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelProductsTableLayout.setVerticalGroup(
            jPanelProductsTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProductsTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSalesTable.setBackground(new java.awt.Color(102, 102, 102));
        jPanelSalesTable.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanelSalesTable.setForeground(new java.awt.Color(255, 255, 255));

        jTableSales.setBackground(new java.awt.Color(102, 102, 102));
        jTableSales.setForeground(new java.awt.Color(255, 255, 255));

        jTableSales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ID customer","Customer name", "Phone number", "Final price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableSales);
        if (jTableSales.getColumnModel().getColumnCount() > 0) {
            jTableSales.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanelSalesTableLayout = new javax.swing.GroupLayout(jPanelSalesTable);
        jPanelSalesTable.setLayout(jPanelSalesTableLayout);
        jPanelSalesTableLayout.setHorizontalGroup(
            jPanelSalesTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSalesTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanelSalesTableLayout.setVerticalGroup(
            jPanelSalesTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSalesTableLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelCarTable.setBackground(new java.awt.Color(102, 102, 102));
        jPanelCarTable.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Car", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanelCarTable.setForeground(new java.awt.Color(255, 255, 255));

        jTableCar.setBackground(new java.awt.Color(102, 102, 102));
        jTableCar.setForeground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setViewportView(jTableCar);
        if (jTableCar.getColumnModel().getColumnCount() > 0) {
            jTableCar.getColumnModel().getColumn(0).setMaxWidth(60);
            jTableCar.getColumnModel().getColumn(2).setMaxWidth(100);
            jTableCar.getColumnModel().getColumn(4).setMaxWidth(120);
            jTableCar.getColumnModel().getColumn(5).setMaxWidth(60);
        }

        javax.swing.GroupLayout jPanelCarTableLayout = new javax.swing.GroupLayout(jPanelCarTable);
        jPanelCarTable.setLayout(jPanelCarTableLayout);
        jPanelCarTableLayout.setHorizontalGroup(
            jPanelCarTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCarTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanelCarTableLayout.setVerticalGroup(
            jPanelCarTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCarTableLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelActions, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelData, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelProductsTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelSalesTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCarTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelProductsTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanelActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelCarTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelCar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelSalesTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();

        oper.setTable(jTableProducts, modelProd, "products");
        cart.cleanCart();
        oper.setTable(jTableCar, modelCart, "cart");
        oper.setTable(jTableSales, modelSales, "sales");
    }// </editor-fold>                        

    private void btnCarRemoveActionPerformed(java.awt.event.ActionEvent evt) {                                             
        try{
            cart.deleteProduct(cart.getIdDelete());
            oper.cleanTable(modelCart);
            oper.setTable(jTableCar, modelCart, "cart");
        }catch(Exception e){
            System.err.println(e.getMessage());
        }
    }                                            

    // Agrego un nuevo producto a la base de datos.
    private void btnDataAddActionPerformed(java.awt.event.ActionEvent evt) throws Exception {                                           
        
        Product prod = getProduct();

        if(prod != null) {                
            conect.addDBProd(prod);
            oper.setTable(jTableProducts, modelProd, "products");
        } else {
            JOptionPane.showMessageDialog(null, "Please insert correct data.");
        }
    }                                          
    
    // Capturo los datos ingresados y retorno un objeto de tipo product.
    private Product getProduct() {
        Product prod = null;

        if(!txtDescription.getText().equals("") && !txtStock.getText().equals("") && !txtPrice.getText().equals("") && 
        !txtExpiration.getText().equals("")) {
            try {
                String description = txtDescription.getText();
                int stock = Integer.parseInt(txtStock.getText());
                float price = Float.parseFloat(txtPrice.getText());
                String expire = txtExpiration.getText();
                int discount = (int) Math.round(Double.parseDouble(txtDiscount.getText()));
                prod = new Product(description, stock, price, expire, discount);  
            }catch(NumberFormatException e) {
                             
            }
        }
        return prod;
    }

    // Modifico los datos de la db de un prod seleccionado. 
    private void btnDataModifyActionPerformed(java.awt.event.ActionEvent evt) {                                              
        Product prod = getProduct();
        
        if(prod != null) {
             try {
                int id = Integer.parseInt(txtid.getText());
                oper.modifyProd(prod, id, modelProd);
                oper.cleanTable(modelProd);
            try {
                oper.setTable(jTableProducts, modelProd, "products");
            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Something is wrong, please check the data");
                e.printStackTrace();
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a product from the table.");
        }
       
    }                                             

    // Se elimina un producto seleccionado de la db. 
    private void btnDataDeleteActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
<<<<<<< HEAD
        if(!txtid.getText().equals("")) {
            if (JOptionPane.showConfirmDialog(null, "Are you sure?", "DELETE PRODUCT",
            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                int id = Integer.parseInt(txtid.getText());
                conect.delelteDB("products", id);   
                clean();         
            }                                          
            oper.setTable(jTableProducts, modelProd, "products");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a product from the table.");
        }       
=======
        if (JOptionPane.showConfirmDialog(null, "Are you sure?", "DELETE PRODUCT",
        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            int id = Integer.parseInt(txtid.getText());
            conect.deleteDB("products", id);   
            clean();         
        }                                          
        oper.setTable(jTableProducts, modelProd, "products");
        
>>>>>>> 5c8823a72fa8eb5fcf1645d095fcd82ae0225070
    }                                             

    //Ingeso de mercadería.
    private void btnDataIncomeActionPerformed(java.awt.event.ActionEvent evt) throws NumberFormatException, SQLException {                                              
        if(!txtid.getText().equals("")) {
            ResultSet data = conect.getProd("products", Integer.parseInt(txtid.getText()));
            if(data.next()) {
                int amount = Integer.parseInt(JOptionPane.showInputDialog(null, "Insert amount you enter"));
                if(amount > 0) {
                    conect.updateDBStock("products", "stock", amount, Integer.parseInt(txtid.getText()));
                } else {
                    JOptionPane.showMessageDialog(null, "Please insert correct data.");
                }
                oper.cleanTable(modelProd);
                oper.setTable(jTableProducts, modelProd, "products");
            } else {
                JOptionPane.showMessageDialog(null, "Product not found.");
            }
           
        }
    }                                             

    // Setea en 0 el stock de los productos vencidos.
    private void btnDataExpiredActionPerformed(java.awt.event.ActionEvent evt) {                                               
        LocalDate today = LocalDate.now();
        try {
            ResultSet data = conect.getDataTableExpired("<=", today.toString());
            while(data.next()) {
                conect.updateDB("products", "stock", "0", Integer.parseInt(data.getString("id")));
            }
            oper.cleanTable(modelProd);
            oper.setTable(jTableProducts, modelProd, "products");
        } catch (SQLException e) {
            // TODO: handle exception
        }
        
        

    }                                              

    // Limpia cuadros de textos y tablas.
    private void btnDataResetActionPerformed(java.awt.event.ActionEvent evt) throws Exception {                                             
        clean();
    }                                            

    // Busca en la db lo ingresado en el cuadro de texto y la columna seleccionada.
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {                                          
        String quest = txtSearch.getText();
        if(!quest.equals("")) {
            if(colSelected != -1) {
                ResultSet data = conect.search("products", nameColumn, quest);
			    try {
                    if(data.next()) {
                        java.sql.ResultSetMetaData resul = data.getMetaData();
                        oper.cleanTable(modelProd);
                        oper.insertDataTable(data, resul, modelProd);
                    } else {
                        JOptionPane.showMessageDialog(null, "Register not found.");
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Something wrong just happended.");
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please select a column.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please insert your search.");
        }
    }                                         

    // Muestro en pantalla aquellos productos que tiene stock mayor a 0.
    private void btnOnlyStockActionPerformed(java.awt.event.ActionEvent evt) {                                             
        try {
            ResultSet data = conect.getStock("products");
            if(data.next()) {
                java.sql.ResultSetMetaData resul = data.getMetaData();
                oper.cleanTable(modelProd);
                oper.insertDataTable(data, resul, modelProd);       
            } else {
                JOptionPane.showMessageDialog(null, "There's no products on Stock.");
            }

        } catch (SQLException e) {
            // TODO: handle exception
        }
    }                                            

    // Ordeno la tabla de productos por cantidad de ventas de cada producto.
    private void btnOrderbySellsActionPerformed(java.awt.event.ActionEvent evt) {                                                
        oper.orderBy("sales", modelProd, "DESC");
    }                                               

    // Se filtran y se muestran en tabla solo los artículos vencidos.
    private void btnOnlyExpiredActionPerformed(java.awt.event.ActionEvent evt) {                                               
        LocalDate today = LocalDate.now();
        try {
            ResultSet data = conect.getDataTableExpired("<=", today.toString());
            if(data.next()) {
                java.sql.ResultSetMetaData resul = data.getMetaData();
                oper.cleanTable(modelProd);
                oper.insertDataTable(data, resul, modelProd);
            } else {
                JOptionPane.showMessageDialog(null, "No expired products.");
            }
            
        } catch (SQLException e) {
            // TODO: handle exception
        }
    }                                              

    private void btnCarAddActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try{
            int row = jTableProducts.getSelectedRow();
            productSelected = new Product(Integer.parseInt(jTableProducts.getValueAt(row, 0).toString()), jTableProducts.getValueAt(row, 1).toString(), Float.parseFloat(jTableProducts.getValueAt(row, 2).toString()), jTableProducts.getValueAt(row, 3).toString(), Integer.parseInt(jTableProducts.getValueAt(row, 4).toString()), Float.parseFloat(jTableProducts.getValueAt(row, 5).toString()), Integer.parseInt(jTableProducts.getValueAt(row, 6).toString()));
            cart.addProduct(productSelected, Integer.parseInt(spinnerCar.getValue().toString()));
            oper.cleanTable(modelCart);
            oper.setTable(jTableCar, modelCart, "cart");
        } catch(Exception e){
            System.err.println(e.getMessage());;
        }
    }                                         

    private void btnCarConfirmActionPerformed(java.awt.event.ActionEvent evt) {     
        custom.setVisible(true);
    }                                             

    private void btnCarClearActionPerformed(java.awt.event.ActionEvent evt) {                                            
        try{
            cart.cleanCart();
            oper.setTable(jTableCar, modelCart, "cart");
        } catch(Exception e){
            System.err.println(e.getMessage());;
        }
    }       
    
    // Limpio los cuadros de texto y las tablas.
    public void clean() throws Exception {
        txtid.setText("");
        txtDescription.setText("");
        txtPrice.setText("");
        txtExpiration.setText("");
        txtStock.setText("");
        txtDiscount.setText("");
        txtSearch.setText("");
        oper.cleanTable(modelProd);
        oper.setTable(jTableProducts, modelProd, "products");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Principal().setVisible(true);
                } catch (Exception e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnCarAdd;
    private javax.swing.JButton btnCarClear;
    private javax.swing.JButton btnCarConfirm;
    private javax.swing.JButton btnCarRemove;
    private javax.swing.JButton btnDataAdd;
    private javax.swing.JButton btnDataDelete;
    private javax.swing.JButton btnDataExpired;
    private javax.swing.JButton btnDataIncome;
    private javax.swing.JButton btnDataModify;
    private javax.swing.JButton btnDataReset;
    private javax.swing.JButton btnOnlyExpired;
    private javax.swing.JButton btnOnlyStock;
    private javax.swing.JButton btnOrderbySells;
    private javax.swing.JButton btnSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelActions;
    private javax.swing.JPanel jPanelCar;
    private javax.swing.JPanel jPanelCarTable;
    private javax.swing.JPanel jPanelData;
    private javax.swing.JPanel jPanelProductsTable;
    private javax.swing.JPanel jPanelSalesTable;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableCar;
    private javax.swing.JTable jTableProducts;
    private javax.swing.JTable jTableSales;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblDiscount;
    private javax.swing.JLabel lblExpiration;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblid;
    private javax.swing.JSpinner spinnerCar;
    private javax.swing.JTextField txtCarTotal;
    private javax.swing.JTextField txtDescription;                     
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtExpiration;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtid;
    CustomerWindow custom;
    // End of variables declaration                   
    @Override
    public void ancestorAdded(AncestorEvent event) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void ancestorRemoved(AncestorEvent event) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void ancestorMoved(AncestorEvent event) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        // TODO Auto-generated method stub
        
    }
}